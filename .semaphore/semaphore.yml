version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: ValidatePR
    skip:
      when: branch = 'master'
    task:
      jobs:
        - name: packer validate
          commands:
            - |-
              if [ "$SEMAPHORE_GIT_REF_TYPE" = "pull-request" ]; then
                wget https://releases.hashicorp.com/packer/1.4.5/packer_1.4.5_linux_amd64.zip && unzip packer_1.4.5_linux_amd64.zip
                sudo mv packer /usr/local/bin && sudo chmod +x /usr/local/bin/packer
                checkout
                packer validate ami.json
              fi
  - name: Build AMI
    skip:
      when: branch != 'master'
    task:
      secrets:
        - name: AWS
      jobs:
        - name: packer build
          commands:
            - checkout
            - >-
              wget
              https://releases.hashicorp.com/packer/1.4.5/packer_1.4.5_linux_amd64.zip
              && unzip packer_1.4.5_linux_amd64.zip
            - >-
              sudo mv packer /usr/local/bin && sudo chmod +x
              /usr/local/bin/packer
            - >-
              packer build -var "aws_access_key=${AWS_ACCESS_KEY_ID}" -var
              "aws_secret_key=${AWS_SECRET_ACCESS_KEY}" ami.json
            - artifact push project manifest.json --force
  - name: Test AMI
    task:
      secrets:
        - name: AWS
        - name: packer-CI-ssh
      env_vars:
        - name: AWS_REGION
          value: us-east-1
        - name: KEY_PAIR
          value: packer-CI
        - name: SG
          value: sg-0800e2fd2d7ac3912
        - name: INSTANCE_TYPE
          value: t2.micro
      jobs:
        - name: test packer ami
          commands:
            - sudo apt update -y && sudo apt install jq awscli -y
            - gem install ami_spec
            - chmod 400 packer-CI.pem
            - artifact pull project manifest.json
            - >-
              AMI_ID=$(cat manifest.json| jq -r '.builds[].artifact_id' | sed -e
              "s/${AWS_REGION}://g")
            - >-
              INSTANCE_ID=$(aws ec2 run-instances --image-id ${AMI_ID} --count 1
              --instance-type ${INSTANCE_TYPE} --key-name ${KEY_PAIR}
              --security-group-ids ${SG} --region ${AWS_REGION} | jq -r
              '.Instances[].InstanceId')
            - echo "Waiting for the EC2 test instance to spun up..."
            - sleep 120s
            - >-
              INSTANCE_PUBLIC_IP=$(aws ec2 describe-instances --instance-ids
              ${INSTANCE_ID} --region ${AWS_REGION} --query
              "Reservations[*].Instances[*].PublicIpAddress" --output=text)
            - >-
              echo "Testing EC2 instance Id:${INSTANCE_ID}, Public
              IP:${INSTANCE_PUBLIC_IP} generated from ami ${AMI_ID}."
            - >-
              ssh -oStrictHostKeyChecking=no -i packer-CI.pem
              ubuntu@${INSTANCE_PUBLIC_IP} 'uptime; df -h'
            - 'echo "Instance ${INSTANCE_ID} tested OK!"'
            - >-
              aws ec2 terminate-instances --instance-ids ${INSTANCE_ID} --region
              ${AWS_REGION}
            - >-
              aws ec2 deregister-image --image-id ${AMI_ID} --region
              ${AWS_REGION}
